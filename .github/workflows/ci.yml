on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - 'main'
    tags:
      - 'v*'

# Secrets:
# * CACHE_VERSION - Set to `date +%s`, set new when the cache should be busted

env:
  BUILD_EMBEDDED: true
  DIALYZER_PLT_PRIV: true
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  format:
    name: Check Formatting
    
    runs-on: ubuntu-latest

    env:
      MIX_ENV: dev

    steps:
      - uses: actions/checkout@v2
      - uses: erlef/setup-elixir@v1
        with:
          otp-version: 24.1.1
          elixir-version: 1.12.3
      - uses: actions/cache@v2
        with:
          path: deps
          key: deps-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-${{ hashFiles('mix.lock') }}
          restore-keys: |
            deps-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-
            deps-${{ secrets.CACHE_VERSION }}-
      - run: mix deps.get
      - run: mix format --check-formatted

  test:
    name: Run Tests & Submit Coverage

    runs-on: ubuntu-latest

    env:
      MIX_ENV: test

    steps:
      - uses: actions/checkout@v2
      - uses: erlef/setup-elixir@v1
        with:
          otp-version: 24.1.1
          elixir-version: 1.12.3
      - uses: actions/cache@v2
        with:
          path: deps
          key: deps-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-${{ hashFiles('mix.lock') }}
          restore-keys: |
            deps-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-
            deps-${{ secrets.CACHE_VERSION }}-
      - run: mix deps.get
      - uses: actions/cache@v2
        with:
          path: _build/test
          key: compile_test-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-${{ hashFiles('mix.lock') }}
          restore-keys: |
            compile_test-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-
            compile_test-${{ secrets.CACHE_VERSION }}-
      - run: mix deps.compile
      - run: mix compile --warning-as-errors
      - run: mix coveralls.github || mix test

  credo:
    name: Check Credo

    runs-on: ubuntu-latest

    env:
      MIX_ENV: dev

    steps:
      - uses: actions/checkout@v2
      - uses: erlef/setup-elixir@v1
        with:
          otp-version: 24.1.1
          elixir-version: 1.12.3
      - uses: actions/cache@v2
        with:
          path: deps
          key: deps-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-${{ hashFiles('mix.lock') }}
          restore-keys: |
            deps-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-
            deps-${{ secrets.CACHE_VERSION }}-
      - run: mix deps.get
      - uses: actions/cache@v2
        with:
          path: _build/dev
          key: compile_dev-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-${{ hashFiles('mix.lock') }}
          restore-keys: |
            compile_dev-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-
            compile_dev-${{ secrets.CACHE_VERSION }}-
      - run: mix deps.compile
      - run: mix compile --warning-as-errors
      - run: mix credo --strict

  dialyzer_plt:
    name: Generate Dialyzer PLT

    runs-on: ubuntu-latest

    env:
      MIX_ENV: dev

    steps:
      - uses: actions/checkout@v2
      - uses: erlef/setup-elixir@v1
        with:
          otp-version: 24.1.1
          elixir-version: 1.12.3
      - uses: actions/cache@v2
        with:
          path: deps
          key: deps-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-${{ hashFiles('mix.lock') }}
          restore-keys: |
            deps-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-
            deps-${{ secrets.CACHE_VERSION }}-
      - run: mix deps.get
      - uses: actions/cache@v2
        with:
          path: _build/dev
          key: compile_dev-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-${{ hashFiles('mix.lock') }}
          restore-keys: |
            compile_dev-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-
            compile_dev-${{ secrets.CACHE_VERSION }}-
      - run: mix deps.compile
      - run: mix compile --warning-as-errors
      - uses: actions/cache@v2
        with:
          path: priv/plts/
          key: dialyzer_plt_dev-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-${{ hashFiles('mix.lock') }}
          restore-keys: |
            dialyzer_plt_dev-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-
            dialyzer_plt_dev-${{ secrets.CACHE_VERSION }}-
      - run: mix dialyzer --plt
      - uses: actions/upload-artifact@v2
        with:
          name: dialyzer_plt_dev
          path: priv/plts/

  dialyzer_test:
    name: "Check Dialyzer"

    runs-on: ubuntu-latest

    needs: ['dialyzer_plt']

    env:
      MIX_ENV: dev

    steps:
      - uses: actions/checkout@v2
      - uses: erlef/setup-elixir@v1
        with:
          otp-version: 24.1.1
          elixir-version: 1.12.3
      - uses: actions/cache@v2
        with:
          path: deps
          key: deps-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-${{ hashFiles('mix.lock') }}
          restore-keys: |
            deps-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-
            deps-${{ secrets.CACHE_VERSION }}-
      - run: mix deps.get
      - uses: actions/cache@v2
        with:
          path: _build/dev
          key: compile_dev-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-${{ hashFiles('mix.lock') }}
          restore-keys: |
            compile_dev-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-
            compile_dev-${{ secrets.CACHE_VERSION }}-
      - run: mix deps.compile
      - run: mix compile --warning-as-errors
      - uses: actions/download-artifact@v2
        with:
          name: dialyzer_plt_dev
          path: priv/plts/
      - run: mix dialyzer

  docs:
    name: "Generate Docs"

    runs-on: ubuntu-latest

    env:
      MIX_ENV: dev

    steps:
      - uses: actions/checkout@v2
      - uses: erlef/setup-elixir@v1
        with:
          otp-version: 24.1.1
          elixir-version: 1.12.3
      - uses: actions/cache@v2
        with:
          path: deps
          key: deps-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-${{ hashFiles('mix.lock') }}
          restore-keys: |
            deps-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-
            deps-${{ secrets.CACHE_VERSION }}-
      - run: mix deps.get
      - uses: actions/cache@v2
        with:
          path: _build/dev
          key: compile_dev-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-${{ hashFiles('mix.lock') }}
          restore-keys: |
            compile_dev-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-
            compile_dev-${{ secrets.CACHE_VERSION }}-
      - run: mix deps.compile
      - run: mix compile --warning-as-errors
      - run: mix docs
      - uses: actions/upload-artifact@v2
        with:
          name: docs
          path: doc
  
  automerge_dependabot:
    name: "Automerge Dependabot PRs"

    runs-on: ubuntu-latest

    needs: ['dialyzer_test', 'test', 'format', 'credo', 'docs']

    steps:
      - uses: fastify/github-action-merge-dependabot@v2.4.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          # Major Updates need to be merged manually
          target: minor
